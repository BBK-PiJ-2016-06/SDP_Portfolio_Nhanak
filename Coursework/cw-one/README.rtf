{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww16000\viewh11000\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Project Title\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 An interpreter for a simple machine language SML in an .sml file. The general form of\
a machine language instruction is  
\fs20 label instruction register-list\

\fs24 where label is the label for the line. Other instructions might \'93jump" to that label.\
Instruction is the actual instruction.\
In SML, there are instructions for adding, multiplying and so on, for storing and\
retrieving integers, and for conditionally branching to other labels (like an if state-\
ment).\
Register-list is the list of registers that the instruction manipulates.\
Registers are simple, integer, storage areas in computer memory, much like vari-\
ables. In SML, there are 32 registers, numbered 0, 1, . . . , 31.\
\
Instructions of a program are executed in order (starting with the first one), unless the\
order is changed by execution of a bnz instruction. Execution terminates when its last\
instruction has been executed (and doesn't change the order of execution).
\f0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 ### Installing\
\
Copy the classes and instantiate through the standard SBT file structure. \
\
## Running the tests\
\
Tests can be run in IntelliJ or through SBT\
\
\
## Built With\
\
* [IntelliJ]\
\
## Authors\
\
* **Nathan Hanak** \
** Initial source code provided by SDP class at Birkbeck}