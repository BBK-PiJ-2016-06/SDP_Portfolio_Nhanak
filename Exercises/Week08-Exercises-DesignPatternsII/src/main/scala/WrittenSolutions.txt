Solutions to questions requiring written solutions for Exercises on Design Patterns II

1.) (a) Briefly describe the Strategy Design Pattern

    Adding new functionality to a superclass which you want to pass on to its subclasses. You add the functionality in
    an interface which has the functionality and add it as an object within your main subclass. This allows flexibility
    in how the subclasses implement this new behavior.

    (b) When is it appropriate to use the Strategy Design Pattern?

    When you want to add similar functionality to some classes which are part of the same "inheritance" family
    but they will implement this functionality in a unique way, or not at all. So basically, when you want to make a
    change to your superclass without breaking your subclass.


3.) When is it appropriate to use an abstract factory?

    An abstract factory is appropriate to use when you want to hide the creation of objects from the client. Also
    it is appropriate to use when you may be creating new types of objects later on down the road, but don't know
    what these are, so you don't want to have to go back and modify everything.